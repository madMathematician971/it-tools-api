name: Bump Patch Version

on:
  push:
    branches:
      - develop
  workflow_run:
    workflows:
      - Static Analysis
      - Build
    types:
      - completed

jobs:
  bump-patch:
    name: Bump patch version (Poetry)
    runs-on: ubuntu-latest
    if: >-
      (github.event_name == 'workflow_run' &&
        github.event.workflow_run.conclusion == 'success' &&
        github.event.workflow_run.head_branch == 'develop') ||
      ${{!(github.event_name == 'push' && startsWith(github.event.head_commit.message, 'ci: bump'))}}
    permissions:
      contents: write
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.VERSION_BUMP_APP_ID }}
          private-key: ${{ secrets.VERSION_BUMP_APP_TOKEN }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dev dependencies
        run: uv sync --only-dev

      - name: Bump version
        id: bump_version
        run: |
          uv run --no-sync poetry version patch
          echo "VERSION=$(uv run --no-sync poetry version -s)" >> $GITHUB_OUTPUT

      - name: Commit & push changes
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git config user.name "${{ secrets.VERSION_BUMP_APP_ID }}[bot]"
          git config user.email "${{ secrets.VERSION_BUMP_APP_ID }}[bot]@users.noreply.github.com"

          git add pyproject.toml
          git commit-m "ci: bump patch version to v${{ steps.bump_version.outputs.VERSION }}" || echo "No changes"

          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git"
          git push origin HEAD:develop
